package rsvr;


import static org.junit.Assert.*;

import java.net.Socket;

import junit.framework.Assert;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import rsvr.IKibGramEnum;
import rsvr.KibGram;
import rsvr.KibReceiver;

public class KibGramTest {

  @BeforeClass
  public static void setUpBeforeClass() throws Exception {
  }

  @AfterClass
  public static void tearDownAfterClass() throws Exception {
  }

  @Before
  public void setUp() throws Exception {
  }

  @After
  public void tearDown() throws Exception {
  }

  @Test
  public void testParserKibHeader()
  {
//    int position[] = KibGram.getHeaderPositon();
    //                   000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111112222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
    //                   000000000011111111112222222222333333333334444444444555555555666666666677777777778888888888999999999900000000001111111111222222222233333333333444444444455555555566666666667777777777888888888899999999990000000000111111111122222222223333333333344444444445555555556666666666777777777788888888889999999999
    //                   012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
    String msg    = "0300456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123";
    // msg 길이 오류
    String errMsg = "0300456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789";
    
//    assertEquals("MSG Length check..", "0300", msg.substring(position[0], position[1]));

//    KibReceiver kr = null;
//    Socket s = null;
//    KibReceiver.Client client = null;
//	try {
//		kr = new KibReceiver();
//		client = kr.new Client(s);
//		client.parseKibHeader(msg);
//	} catch (Exception e1) {
//		// TODO Auto-generated catch block
//		e1.printStackTrace();
//	}

    KibGram kib;
    kib = KibGram.create(msg);
    
    String[] kibHeader = null;
	try {
		kibHeader = kib.getHeader();
	} catch (Exception e) {
		fail("error ...");
		e.printStackTrace();
	}
    
    assertEquals("header count check..", 29, kibHeader.length);
    assertEquals("4567", kibHeader[0]);
    
//    IKibGramEnum kib2;
    kib = KibGram.create(errMsg);

    try {
		kibHeader = kib.getHeader();
		fail("헤더길이 오류 ...");
	} catch (Exception e) {
//		e.printStackTrace();
	}
  }

  @Test
  public void testIsStartGram() {
	  assertEquals(300, Integer.parseInt("0300"));
  }

  	@Test
	public void testCreateReturnMsg()
	{
		// 전송전문
		String[] 전송전문 = {
			//   KB0200####****----********-***-********---------*----****---YYYYMMDDhhmmss-------*-********-**************************************************************************************************************************************************************----------------------------------------******----**********=============@xxxxxxxxxxxxx@@@@@@@@@@@@@========@@================@@@@@@@@@@@@@@@@@@@@========@@================@@@@@@@@====================^^^^^===@@########------##--------######--########------##--------######--########------##===@@@@@@@@@@@@=====@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
				"KB020006040600000920032902000052003290220032902 30200110000020111128100648007896220000009880                                                                                                                                                                                                      000000              0000005000000 00000000000000000000000000000000200083300093302004  황상하              0000008800100024180210            하이캐피탈          0000000000              00              00              00              00              00               00000                                                  "
//				,
//				""
		};
		
		String[] 예상전문 = {
			//         ####****----********-***-********---------*----****rrrYYYYMMDDhhmmss-------*-********-**************************************************************************************************************************************************************----------------------------------------******----**********=============@xxxxxxxxxxxxx@@@@@@@@@@@@@========@@================@@@@@@@@@@@@@@@@@@@@========@@================@@@@@@@@====================^^^^^===@@########------##--------######--########------##--------######--########------##===@@@@@@@@@@@@=====@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
				      "06040600000920032902000052003290220032902 30200110000020111128100648007896220000009880                                                                                                                                                                                                      000000              0000005000000 00012345000000000000000000000000200083300093302004  황상하              0000008800100024180210            하이캐피탈          0010000000              00              00              00              00              00               00000                                                  "
//				,
//				""
	};
//		KibGram kib = KibGram.create(전송전문[0]);
		
		String 받은전문;
		try {
			받은전문 = KibGram.createReturnMsg(전송전문[0]);
			assertEquals(예상전문[0], 받은전문);
		} catch (Exception e) {
			fail("error...");
//			e.printStackTrace();
		}
		
		
	
	}
  
}
